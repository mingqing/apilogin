syntax = "proto3";

package test.apilogin.v1alpha1;

// 引入依赖的外部proto文件
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/grpc/grpc-proto/grpc/health/v1/health.proto";
import "github.com/googleapis/googleapis/google/api/annotations.proto";
import "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options/annotations.proto";

// 同组RPC方法对应一个proto文件，以该组RPC名称的小写字母为文件名
import "demo.proto";
import "login.proto";

// 结合本项目，推荐做以下设置
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_registration) = true;
option (gogoproto.goproto_getters_all) = true;
option (gogoproto.goproto_unrecognized_all) = false;
option (gogoproto.goproto_unkeyed_all) = false;
option (gogoproto.goproto_sizecache_all) = false;
option (gogoproto.equal_all) = true;
option (gogoproto.compare_all) = true;
option (gogoproto.testgen_all) = true;
option (gogoproto.benchgen_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.messagename_all) = false;

// 转换为swagger接口文档的相关设置
option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    host: "apilogin.v1alpha1.test.api.grpc-kit.com",
    info: {
        title: "apilogin.v1alpha1.test",
        contact: {
            name: "gRPC Kit",
            url: "https://grpc-kit.com"
        },
        license:{
            name: "Apache License 2.0"
        }
        version: "v0.0.0",
    },
    security_definitions: {
        security: {
            key: "BasicAuth",
            value: {
                type: TYPE_BASIC
            }
        }
    },
    security: {
        security_requirement: {
            key: "BasicAuth",
            value: {}
        }
    },
    responses: {
        key: "500",
        value: {
            description: '{"code": 500, "error": "internal error", "message": "internal error", "details": []}'
        }
    }
};

// 该微服务支持的RPC方法定义
service TestApilogin {
    rpc HealthCheck(grpc.health.v1.HealthCheckRequest) returns (grpc.health.v1.HealthCheckResponse) {
        option (google.api.http) = {
            get: "/healthz"
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "internal"
            summary: "健康检测"
            description: '请务删除！\n 接口格式：/healthz?service=apilogin.v1alpha1.test\n 请求成功访问状态码200，且内容为：{"status": "SERVING"}'
        };
    };

    rpc BaseAuth(BaseAuthRequest) returns (BaseAuthResponse) {
        option (google.api.http) = {
            get: "/baseauth"
        };

        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "demo",
            summary: "HTTP Base AUTH",
            description: "curl --user hello:world http://127.0.0.1:10080/baseauth",
            deprecated: false,
        };
    };

    rpc JWTAuth(JWTAuthRequest) returns (JWTAuthResponse) {
        option (google.api.http) = {
            get: "/jwtauth"
        };

        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "demo",
            summary: "HTTP JWT AUTH",
            description: "curl -H 'Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJ0ZXN0LW9hdXRoMiIsImV4cCI6NzI1ODA4OTYwMCwiaWF0IjoxNTg1NjcwNDAwLCJpc3MiOiJodHRwOi8vYWNjb3VudC5leGFtcGxlLmNvbS9vYXV0aDIiLCJzdWIiOiIxMDAwMDAwMDAiLCJlbWFpbCI6ImRlbW9AZXhhbXBsZS5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiZmVkZXJhdGVkX2NsYWltcyI6eyJjb25uZWN0b3JfaWQiOiJ0ZXN0IiwidXNlcl9pZCI6ImRlbW8ifX0.wFIYAIIhFXUJdVTM5W4jAXcLBTdU6vmhdwGjD-bET5Q' http://127.0.0.1:10080/jwtauth",
            deprecated: false,
        };
    };

    rpc Demo(DemoRequest) returns (DemoResponse) {
        option (google.api.http) = {
            post: "/demo"
            body: "*"
            response_body: "pong"
            additional_bindings {
                get: "/demo"
                response_body: "content"
            }
            additional_bindings {
                get: "/demo/{uuid}"
                response_body: "pong.pong"
            }
            additional_bindings {
                put: "/demo/{uuid}"
                body: "ping"
                response_body: "ping"
            }
            additional_bindings {
                delete: "/demo/{uuid}"
                response_body: "empty"
            }
        };
        option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
            tags: "demo",
            summary: "示例RESTful/RPC接口",
            description: "这里做一些较长的使用描述\n 1. POST 用于创建资源，非幂等\n 2. GET 用于获取资源，幂等\n 3. PUT 用于更新资源，幂等\n 4. DELETE 用于删除资源，幂等",
            deprecated: false,
            responses: {
                key: "204",
                value: {
                    description: "no content"
                }
            }
        };
    }

}
