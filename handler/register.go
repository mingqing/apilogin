// Code generated by grpc-kit-cli. DO NOT EDIT.

package handler

import (
	"context"
	"net/http"

	"github.com/test/apilogin/api"
	pb "github.com/test/apilogin/api/proto/v1alpha1"
)

// Register 用于服务启动前环境准备
func (m *Microservice) Register(ctx context.Context) error {
	pb.RegisterTestApiloginServer(m.server.Server(), m)

	// 注册服务信息
	mux, err := m.baseCfg.Register(ctx, pb.RegisterTestApiloginHandlerFromEndpoint)
	if err != nil {
		return err
	}

	// 注册API文档
	mux.Handle("/openapi-spec/", http.FileServer(api.Assets))

	// 这里添加其他自定义实现
	m.privateHTTPHandle(mux)

	// 注册HTTP网关
	if err := m.server.RegisterGateway(mux); err != nil {
		return err
	}

	// 开启gRPC与HTTP服务
	if err := m.server.StartBackground(); err != nil {
		return err
	}

	return nil
}